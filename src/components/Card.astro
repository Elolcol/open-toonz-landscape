---
interface Props {
  title?: string;
  subtitle?: string;
  image?: string | ImageMetadata;
  video?: string;
  controls?: boolean;
}

const { title, subtitle, image, video, controls = false } = Astro.props;
---

<article class="card">
  <header>
    <h2>
      {title}
    </h2>
    {subtitle && <h3>{subtitle}</h3>}
  </header>
  <div>
    {
      typeof image === "string" ? (
        <img src={image} alt={title} />
      ) : (
        image && <img src={image.src} alt={title} />
      )
    }

    {
      video && (
        <video
          src={video}
          autoplay
          loop
          muted
          controls={controls ? true : false}
        />
      )
    }
    <slot name="body" />
  </div>

  <slot name="footer" />
</article>

<style>
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-lg);
    border-radius: var(--rounded-md);
    background-color: var(--white-color);
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.1);
    color: var(--dark-color);
    max-width: 1000px;

    header {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

      h2 {
        font-size: 2rem;
        font-weight: 900;
        text-align: center;
      }

      h3 {
        font-size: 1.5rem;
        font-weight: 600;
        text-align: center;
      }
    }

    div {
      display: flex;
      flex-direction: row-reverse;
      justify-content: center;
      align-items: flex-start;
      gap: var(--spacing-md);
      width: 100%;
    }

    img,
    video {
      min-width: 50%;
      height: auto;
      object-fit: cover;
      border-radius: var(--rounded-md);
    }
  }

  @media screen and (max-width: 768px) {
    .card {
      div {
        flex-direction: column;
      }
    }

    img,
    video {
      width: 100%;
    }
  }
</style>
